Checks:         '-*,
                clang-diagnostic-*,
                clang-analyzer-*,
                -clang-analyzer-alpha*,
                bugprone-argument-comment,
                bugprone-assert-side-effect,
                bugprone-bool-pointer-implicit-conversion,
                bugprone-copy-constructor-init,
                bugprone-dangling-handle,
                bugprone-fold-init-type,
                bugprone-forward-declaration-namespace,
                bugprone-forwarding-reference-overload,
                bugprone-inaccurate-erase,
                bugprone-incorrect-roundings,
                bugprone-integer-division,
                bugprone-lambda-function-name,
                bugprone-macro-parentheses,
                bugprone-macro-repeated-side-effects,
                bugprone-misplaced-operator-in-strlen-in-alloc,
                bugprone-misplaced-widening-cast,
                bugprone-move-forwarding-reference,
                bugprone-multiple-statement-macro,
                bugprone-parent-virtual-call,
                bugprone-sizeof-container,
                bugprone-sizeof-expression,
                bugprone-string-constructor,
                bugprone-string-integer-assignment,
                bugprone-string-literal-with-embedded-nul,
                bugprone-suspicious-enum-usage,
                bugprone-suspicious-memset-usage,
                bugprone-suspicious-missing-comma,
                bugprone-suspicious-semicolon,
                bugprone-suspicious-string-compare,
                bugprone-swapped-arguments,
                bugprone-terminating-continue,
                bugprone-throw-keyword-missing,
                bugprone-undefined-memory-manipulation,
                bugprone-undelegated-constructor,
                bugprone-unused-raii,
                bugprone-unused-return-value,
                bugprone-use-after-move,
                bugprone-virtual-near-miss,
                cert-dcl03-c (redirects to misc-static-assert),
                cert-dcl21-cpp,
                cert-dcl50-cpp,
                cert-dcl54-cpp (redirects to misc-new-delete-overloads),
                cert-dcl58-cpp,
                cert-dcl59-cpp (redirects to google-build-namespaces),
                cert-env33-c,
                cert-err09-cpp (redirects to misc-throw-by-value-catch-by-reference),
                cert-err34-c,
                cert-err52-cpp,
                cert-err60-cpp,
                cert-err61-cpp (redirects to misc-throw-by-value-catch-by-reference),
                cert-fio38-c (redirects to misc-non-copyable-objects),
                cert-flp30-c,
                cert-msc30-c (redirects to cert-msc50-cpp),
                cert-msc32-c (redirects to cert-msc51-cpp),
                cert-msc50-cpp,
                cert-msc51-cpp,
                cert-oop11-cpp (redirects to performance-move-constructor-init),
                cppcoreguidelines-avoid-goto,
                cppcoreguidelines-c-copy-assignment-signature (redirects to misc-unconventional-assign-operator),
                cppcoreguidelines-interfaces-global-init,
                cppcoreguidelines-narrowing-conversions,
                cppcoreguidelines-no-malloc,
                cppcoreguidelines-pro-bounds-constant-array-index,
                cppcoreguidelines-pro-bounds-pointer-arithmetic,
                cppcoreguidelines-pro-type-const-cast,
                cppcoreguidelines-pro-type-member-init,
                cppcoreguidelines-pro-type-reinterpret-cast,
                cppcoreguidelines-pro-type-static-cast-downcast,
                cppcoreguidelines-pro-type-union-access,
                cppcoreguidelines-slicing,
                hicpp-avoid-goto,
                hicpp-braces-around-statements (redirects to readability-braces-around-statements),
                hicpp-deprecated-headers (redirects to modernize-deprecated-headers),
                hicpp-exception-baseclass,
                hicpp-explicit-conversions (redirects to google-explicit-constructor),
                hicpp-function-size (redirects to readability-function-size),
                hicpp-invalid-access-moved (redirects to bugprone-use-after-move),
                hicpp-member-init (redirects to cppcoreguidelines-pro-type-member-init),
                hicpp-move-const-arg (redirects to performance-move-const-arg),
                hicpp-multiway-paths-covered,
                hicpp-named-parameter (redirects to readability-named-parameter),
                hicpp-new-delete-operators (redirects to misc-new-delete-overloads),
                hicpp-no-assembler,
                hicpp-no-malloc (redirects to cppcoreguidelines-no-malloc),
                hicpp-noexcept-move (redirects to misc-noexcept-moveconstructor),
                hicpp-static-assert (redirects to misc-static-assert),
                hicpp-undelegated-constructor (redirects to bugprone-undelegated-constructor),
                hicpp-use-auto (redirects to modernize-use-auto),
                hicpp-use-emplace (redirects to modernize-use-emplace),
                hicpp-use-equals-default (redirects to modernize-use-equals-default),
                hicpp-use-equals-delete (redirects to modernize-use-equals-delete),
                hicpp-use-noexcept (redirects to modernize-use-noexcept),
                hicpp-use-nullptr (redirects to modernize-use-nullptr),
                hicpp-use-override (redirects to modernize-use-override),
                misc-definitions-in-headers,
                misc-misplaced-const,
                misc-new-delete-overloads,
                misc-non-copyable-objects,
                misc-redundant-expression,
                misc-static-assert,
                misc-throw-by-value-catch-by-reference,
                misc-unconventional-assign-operator,
                misc-uniqueptr-reset-release,
                misc-unused-alias-decls,
                misc-unused-parameters,
                misc-unused-using-decls,
                modernize-deprecated-headers,
                modernize-loop-convert,
                modernize-make-shared,
                modernize-make-unique,
#                modernize-pass-by-value,
                modernize-raw-string-literal,
                modernize-redundant-void-arg,
                modernize-replace-auto-ptr,
                modernize-replace-random-shuffle,
                modernize-return-braced-init-list,
                modernize-shrink-to-fit,
                modernize-unary-static-assert,
                modernize-use-auto,
                modernize-use-bool-literals,
                modernize-use-default-member-init,
                modernize-use-emplace,
                modernize-use-equals-default,
                modernize-use-equals-delete,
                modernize-use-noexcept,
                modernize-use-nullptr,
                modernize-use-override,
                modernize-use-transparent-functors,
                modernize-use-uncaught-exceptions,
                modernize-use-using,
                performance-faster-string-find,
                performance-for-range-copy,
                performance-implicit-conversion-in-loop,
                performance-inefficient-algorithm,
                performance-inefficient-string-concatenation,
                performance-inefficient-vector-operation,
                performance-move-const-arg,
                performance-move-constructor-init,
                performance-noexcept-move-constructor,
                performance-type-promotion-in-math-fn,
                performance-unnecessary-copy-initialization,
                performance-unnecessary-value-param,
                portability-simd-intrinsics,
                readability-avoid-const-params-in-decls,
                readability-braces-around-statements,
                readability-container-size-empty,
                readability-delete-null-pointer,
                readability-deleted-default,
                readability-else-after-return,
                readability-function-size,
#                readability-identifier-naming,
                readability-inconsistent-declaration-parameter-name,
                readability-misleading-indentation,
                readability-misplaced-array-index,
                readability-named-parameter,
                readability-non-const-parameter,
                readability-redundant-control-flow,
                readability-redundant-declaration,
                readability-redundant-function-ptr-dereference,
                readability-redundant-member-init,
                readability-redundant-smartptr-get,
                readability-redundant-string-cstr,
                readability-redundant-string-init,
                readability-simplify-boolean-expr,
                readability-simplify-subscript-expr,
                readability-static-accessed-through-instance,
                readability-static-definition-in-anonymous-namespace,
                readability-string-compare,
                readability-uniqueptr-delete-release,
# checks from clang-tidy v8
                bugprone-too-small-loop-variable,
                cppcoreguidelines-macro-usage, # this might cause false positives
                misc-non-private-member-variables-in-classes,
                modernize-avoid-c-arrays,
                modernize-concat-nested-namespaces,
                modernize-deprecated-ios-base-aliases,
                readability-const-return-type,
                readability-isolate-decl,
                readability-redundant-preprocessor,
                readability-uppercase-literal-suffix,
# checks from clang-tidy v9
                bugprone-branch-clone,
                bugprone-posix-return,
                bugprone-unhandled-self-assignment,
                readability-convert-member-functions-to-static,
# checks from clang-tidy v10
                bugprone-bad-signal-to-kill-thread,
                bugprone-dynamic-static-initializers,
                bugprone-infinite-loop,
                bugprone-not-null-terminated-result,
                bugprone-signed-char-misuse,
                cert-mem57-cpp,
                cert-oop58-cpp,
                cppcoreguidelines-init-variables,
                google-upgrade-googletest-case,
                performance-no-automatic-move,
                performance-trivially-destructible,
                readability-make-member-function-const,
                readability-qualified-auto,
                readability-redundant-access-specifiers'
# Disabled checks:
# - bugprone-exception-escape: warnings about possible exceptions from ctor-s and dtor-s
# - cert-err58-cpp: initialization with static storage may throw an exception
# - cppcoreguidelines-owning-memory: "initializing non-owner argument" warnings when using TEST_F
# - readability-magic-numbers: Unavoidable for custom literals, as 30s, 10ms, etc.
# - modernize-use-nodiscard: Unavoidable, it requeres [[nodiscard]] for all non-void functions.
# - readability-implicit-bool-conversion: Unavoidable, it requeres type conversions for non-zero check, e.g. someValue ? "yes" : "no".
# - modernize-avoid-bind: Unavoidable, if std::bind is used.
# - modernize-pass-by-value: passing values by value is not applicable in all cases

WarningsAsErrors: ''
HeaderFilterRegex: ''
CheckOptions:
  - key: readability-identifier-naming.InlineNamespaceCase
    value: camelBack
  - key: readability-identifier-naming.NamespaceCase
    value: camelBack
  - key: readability-identifier-naming.EnumConstantCase
    value: UPPER_CASE
# - key: readability-identifier-naming.ConstexprVariableCase
#   value: UPPER_CASE
  - key: readability-identifier-naming.PrivateMemberCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: m_
  - key: readability-identifier-naming.ProtectedMemberCase
    value: camelBack
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: m_
  - key: readability-identifier-naming.PublicMemberCase
    value: camelBack
  - key: readability-identifier-naming.ClassConstantCase
    value: camelBack
  - key: readability-identifier-naming.ClassConstantPrefix
    value: s_
  - key: readability-identifier-naming.ClassMemberPrefix
    value: s_
  - key: readability-identifier-naming.GlobalConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.GlobalVariableCase
    value: camelBack
  - key: readability-identifier-naming.GlobalVariablePrefix
    value: g_
  - key: readability-identifier-naming.LocalConstantCase
    value: camelBack
  - key: readability-identifier-naming.LocalVariableCase
    value: camelBack
  - key: readability-identifier-naming.StaticConstantCase
    value: camelBack
  - key: readability-identifier-naming.StaticVariableCase
    value: camelBack
  - key: readability-identifier-naming.ParameterCase
    value: camelBack
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.MethodCase
    value: camelBack
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.TypeAliasCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
